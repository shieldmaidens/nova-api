/*
 *   Pleiades Source Code
 *   Copyright (C) 2023 Sienna Lloyd, Pleiades Authors
 *
 *   This program is free software: you can redistribute it and/or modify
 *   it under the terms of the GNU General Public License as published by
 *   the Free Software Foundation, either version 3 of the License, or
 *   (at your option) any later version.
 *
 *   This program is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *   GNU General Public License for more details.
 *
 *   You should have received a copy of the GNU General Public License
 *   along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

syntax = "proto3";
package keystore.v1;

import "raft/v1/raft.proto";

option go_package = "github.com/mxplusb/pleiades/api/v1/keystore";

message KeystoreMetadata {
  repeated KeyRange ranges = 1;
}

message KeyRangeMetadata {
  uint64 id = 1;
  KeyRangeOwner owner = 2;
}

message KeyRangeOwner {
  KeyRange range = 1;
  uint64 leader = 2;
  raft.v1.HostNode host_node = 3;
}

// A KeyRange is a slice of the overall key space. It is defined by its start
// and end keys. The start key is included in the range, the end key is not.
message KeyRange {
  // start_key is the first key in the range, inclusive. It is a uint128
  // encoded as a byte array.
  bytes start_key = 1;
  // end_key is the upper bound on the end of the range, exclusive. It is a
  // uint128 encoded as a byte array.
  bytes end_key = 2;
}

// A key-value pair with a key range associated with it.
message RangedKeyValuePair {
  KeyRange range = 1;
  raft.v1.KeyValuePair kvp = 2;
}
